<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Typescript on FaultNote</title><link>https://faultnote.github.io/tags/typescript/</link><description>Recent content in Typescript on FaultNote</description><generator>Hugo</generator><language>ko</language><lastBuildDate>Sat, 27 Aug 2022 22:00:00 +0900</lastBuildDate><atom:link href="https://faultnote.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>TypeScript 50 Lessons Part 7</title><link>https://faultnote.github.io/posts/typescript-50-lessons-7/</link><pubDate>Sat, 27 Aug 2022 22:00:00 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-7/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;div id="outline-container-headline-2" class="outline-3"&gt;
&lt;h3 id="headline-2"&gt;
Lesson 43
&lt;/h3&gt;
&lt;div id="outline-text-headline-2" class="outline-text-3"&gt;
&lt;pre class="example"&gt;
Promise 와 가변variadic 튜플 타입
&lt;/pre&gt;
&lt;p&gt;새로운 기법을 활용해 callback 스타일의 코드를 promisify 하게 만들어 아래와 같은 동작을 기대하는 유틸리티 함수를 만들어보자.&lt;/p&gt;</description></item><item><title>TypeScript 50 Lessons Part 6</title><link>https://faultnote.github.io/posts/typescript-50-lessons-6/</link><pubDate>Sat, 13 Aug 2022 20:00:00 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-6/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;div id="outline-container-headline-2" class="outline-3"&gt;
&lt;h3 id="headline-2"&gt;
Lesson 36
&lt;/h3&gt;
&lt;div id="outline-text-headline-2" class="outline-text-3"&gt;
&lt;pre class="example"&gt;
조건부 타입
&lt;/pre&gt;
&lt;p&gt;4장에서 union 과 intersection 을 통해 타입 공간을 확장하고 축소하는 방법과 임의의 데이터 구성에 대해 적당한 집합을 생성하는 법을 알아보았다. 5장에서는 generic 기법을 통해 타입을 공용화하고 데이터가 사용되는 시점에 함수와 클래스의 타입을 적용해 타입을 제약했다. 만약 타입이 애매하면 어떻게 할까? 제너릭하게 하나의 타입으로 묶지 못할 때는? 결과에 따라 타입을 선택해야 할 경우 등을 위해 조건부 타입이 필요하다.
if-else 를 사용하는 것과 같은 방식으로 타입에 조건을 사용하는 것이다. CD 나 LP 들을 파는 커머스 앱을 구성하면서 조건부 타입을 사용하는 방법을 알아보자.&lt;/p&gt;</description></item><item><title>TypeScript 50 Lessons Part 5</title><link>https://faultnote.github.io/posts/typescript-50-lessons-5/</link><pubDate>Sat, 23 Jul 2022 15:00:00 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-5/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;div id="outline-container-headline-2" class="outline-3"&gt;
&lt;h3 id="headline-2"&gt;
Lesson 29
&lt;/h3&gt;
&lt;div id="outline-text-headline-2" class="outline-text-3"&gt;
&lt;pre class="example"&gt;
내가 원하는 게 뭔지 모르지만 어떻게 얻을지 알고 있다.
&lt;/pre&gt;
&lt;p&gt;비디오 스트리밍 플랫폼 예제를 통해 제너릭 타입을 살펴보자.&lt;/p&gt;</description></item><item><title>TypeScript 50 Lessons Part 4</title><link>https://faultnote.github.io/posts/typescript-50-lessons-4/</link><pubDate>Sat, 11 Jun 2022 18:00:00 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-4/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;div id="outline-container-headline-2" class="outline-3"&gt;
&lt;h3 id="headline-2"&gt;
Lesson 22
&lt;/h3&gt;
&lt;div id="outline-text-headline-2" class="outline-text-3"&gt;
&lt;pre class="example"&gt;
데이터 모델링
&lt;/pre&gt;
&lt;p&gt;레슨 22 는 4장의 시작인데 4장은 타입스크립트를 지탱하고 있는 집합 이론에 대해 소개한다. 특히 유니언 타입과 인터섹션 타입에 대한 논의를 하고 있다.&lt;/p&gt;</description></item><item><title>TypeScript 50 Lessons Part 3</title><link>https://faultnote.github.io/posts/typescript-50-lessons-3/</link><pubDate>Sat, 19 Feb 2022 14:46:31 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-3/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;div id="outline-container-headline-2" class="outline-3"&gt;
&lt;h3 id="headline-2"&gt;
Lesson 15
&lt;/h3&gt;
&lt;div id="outline-text-headline-2" class="outline-text-3"&gt;
&lt;pre class="example"&gt;
타입스크립트는 값을 생성하는 영역과 타입을 생성하는 영역으로 구분, 함수는 값을 생성
&lt;/pre&gt;
&lt;p&gt;
함수는 선언부와 본문으로 구성된다. `declare` 키워드는 함수의 본문을 구현하지 않고 코드를 구성할 수 있게 해준다. 인자부와 반환부에 타입을 선언할 수 있다.&lt;/p&gt;</description></item><item><title>TypeScript 50 Lessons Part 2</title><link>https://faultnote.github.io/posts/typescript-50-lessons-2/</link><pubDate>Sat, 22 Jan 2022 12:40:51 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-2/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;div id="outline-container-headline-2" class="outline-3"&gt;
&lt;h3 id="headline-2"&gt;
Lesson 9
&lt;/h3&gt;
&lt;div id="outline-text-headline-2" class="outline-text-3"&gt;
&lt;pre class="example"&gt;
any 괜찮은가? 아니, 안괜찮음
&lt;/pre&gt;
&lt;p&gt;
타입스크립트에서 `:` 을 통해 정의되는 타이핑 기법을 레프트핸드 타이핑이라고 한다.&lt;/p&gt;</description></item><item><title>TypeScript 50 Lessons Part 1</title><link>https://faultnote.github.io/posts/typescript-50-lessons-1/</link><pubDate>Fri, 21 Jan 2022 20:47:53 +0900</pubDate><guid>https://faultnote.github.io/posts/typescript-50-lessons-1/</guid><description>&lt;div id="outline-container-headline-1" class="outline-2"&gt;
&lt;h2 id="headline-1"&gt;
타입스크립트 in 50 레슨
&lt;/h2&gt;
&lt;div id="outline-text-headline-1" class="outline-text-2"&gt;
&lt;p&gt;
&lt;a href="https://fettblog.eu/"&gt;스테판 바움가트너&lt;/a&gt;가 스매싱 매거진에서 출판한 서적으로 타입스크립트 주요 주제들에 대해 잘 짚어주고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://typescript-book.com/"&gt;https://typescript-book.com/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다루고 있는 주제는 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;타입스크립트의 컨셉과 이해하기&lt;/li&gt;
&lt;li&gt;타입스크립트 툴 사용법과 효과적인 사용법&lt;/li&gt;
&lt;li&gt;뭔가 새로 배우지 않고 타입스크립트를 사용하는 법&lt;/li&gt;
&lt;li&gt;구조적 타입 시스템과 시멘틱 그리고 이게 왜 중요한지 이해하기&lt;/li&gt;
&lt;li&gt;유지 관리가 적은 타입을 만들고 재사용하는 법과 점진적으로 개선시키는 법&lt;/li&gt;
&lt;li&gt;프로젝트에 적합한 타입 시스템을 적용하는 법&lt;/li&gt;
&lt;li&gt;타입스크립트 커뮤니티와 언어가 개선되는 과정&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;기술적으로 다루는 내용은 아래와 같다.&lt;/p&gt;</description></item></channel></rss>